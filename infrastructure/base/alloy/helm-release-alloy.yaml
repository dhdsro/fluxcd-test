apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: alloy
spec:
  interval: 5m
  releaseName: alloy
  targetNamespace: alloy
  chart:
    spec:
      chart: operations/helm/charts/alloy
      sourceRef:
        kind: GitRepository
        name: alloy
        namespace: flux-system

  values:
    # Basic Alloy configuration
    alloy:
      configMap:
        content: |
          // Basic Alloy configuration for metrics scraping
          prometheus.scrape "kubernetes_pods" {
            targets = discovery.kubernetes "pods".targets
            forward_to = [prometheus.remote_write.default.receiver]
            scrape_interval = "30s"
          }

          discovery.kubernetes "pods" {
            role = "pod"
            namespaces {
              names = ["default", "podinfo", "grafana", "alloy"]
            }
          }

          // We'll configure the remote write endpoint later
          prometheus.remote_write "default" {
            endpoint {
              url = "http://mimir.mimir:8080/api/v1/push"
            }
          }

    # Security context
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
      fsGroup: 65534

    serviceAccount:
      create: true
      name: alloy

    # Resources
    resources:
      limits:
        memory: 512Mi
        cpu: 200m
      requests:
        memory: 256Mi
        cpu: 100m

#  values:
#    alloy:
#      configMap:
#        create: false
#        content: ''
#        name: alloy
#        key: config.alloy
#      mounts:
#        # -- Mount /var/log from the host into the container for log collection.
#        varlog: true
#      extraPorts:
#        - targetPort: 4317
#          port: 4317
#          name: otlp-grpc
#    controller:
#      priorityClassName: system-cluster-critical
