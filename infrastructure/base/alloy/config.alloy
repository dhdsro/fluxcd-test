// Kubernetes service discovery for pods
discovery.kubernetes "pods" {
  role = "pod"
  namespaces {
    names = ["default", "podinfo", "grafana", "alloy", "mimir"]
  }
}

// Scrape metrics from discovered pods
prometheus.scrape "kubernetes_pods" {
  targets    = discovery.kubernetes.pods.targets
  forward_to = [prometheus.remote_write.default.receiver]
  scrape_interval = "30s"
}

// Kubernetes service discovery for services
discovery.kubernetes "services" {
  role = "service"
  namespaces {
    names = ["default", "podinfo", "grafana", "alloy", "mimir"]
  }
}

// Scrape metrics from services
prometheus.scrape "kubernetes_services" {
  targets    = discovery.kubernetes.services.targets
  forward_to = [prometheus.remote_write.default.receiver]
  scrape_interval = "30s"
}

// Remote write to Mimir with tenant header
prometheus.remote_write "default" {
  endpoint {
    url = "http://mimir.mimir.svc.cluster.local:8080/api/v1/push"
  }

  external_labels = {
    alloy_instance = env("HOSTNAME")
  }
}